@model Realestate_portal.Models.Sys_Users
@using Realestate_portal.Models
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_CRM_Dashboard.cshtml";
    Realestate_portal.Models.Sys_Users activeusr = (Realestate_portal.Models.Sys_Users)ViewBag.activeuser;
    List<Tb_DocuAgent> documents = ViewBag.docsAgent;
    List<Tb_Notes> notes = ViewBag.lstNotes;
    List<Sys_Users> leaders = ViewBag.leaders;
}

<div class="container-fluid">
    <!-- Begin Page Header-->
    <div class="row">
        <div class="page-header">
            <div class="d-flex align-items-center">
                <h2 class="page-header-title"></h2>
                <div>
                    <ul class="breadcrumb">
                        <li class="breadcrumb-item"><a href="#"><i class="ti ti-home"></i></a></li>
                        <li class="breadcrumb-item active">SETTINGS</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <!-- End Page Header -->
    <!-- Begin Widget 08 -->
    <div class="widget widget-08" style="width: 100%;background-color:transparent">
        @if (TempData["advertencia"] != null)
        {
            <div class="alert alert-outline-warning dashed" role="alert">
                @TempData["advertencia"]
            </div><br />
        }

        @if (TempData["exito"] != null)
        {
            <div class="alert alert-outline-success dashed" role="alert">
                @TempData["exito"]
            </div><br />
        }


        <!-- Begin Widget -->
        <div class="widget has-shadow">
            <div class="widget-header bordered no-actions d-flex align-items-center">
                <h4>SETTINGS</h4>
            </div>
            <!-- End Widget Header -->
            <!-- Begin Widget Body -->
            <div class="widget-body sliding-tabs" style="padding-bottom:250px">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                            <ul class="nav nav-tabs" id="example-one" role="tablist">
                                <li class="nav-item">
                                    <a class="nav-link active" id="base-tab-1" data-toggle="tab" href="#tab-1" role="tab" aria-controls="tab-1" aria-selected="true">Basic Information</a>
                                </li>
                                @if (ViewBag.rol == "Admin")
                                {
                                    <li class="nav-item">
                                        <a class="nav-link" id="base-tab-4" data-toggle="tab" href="#tab-4" role="tab" aria-controls="tab-4" aria-selected="false">Broker Information</a>
                                    </li>
                                }

                                <li class="nav-item">
                                    <a class="nav-link" id="base-tab-2" data-toggle="tab" href="#tab-2" role="tab" aria-controls="tab-2" aria-selected="false">Social Networks</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="base-tab-3" data-toggle="tab" href="#tab-3" role="tab" aria-controls="tab-3" aria-selected="false">Payment Settings</a>
                                </li>

                                <li class="nav-item">
                                    <a class="nav-link" id="base-tab-5" data-toggle="tab" href="#tab-5" role="tab" aria-controls="tab-5" aria-selected="false">Documents</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="base-tab-6" data-toggle="tab" href="#tab-6" role="tab" aria-controls="tab-6" aria-selected="false">Notes</a>
                                </li>
                            </ul>

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ID_User)

            <div class="tab-content pt-3">
                <div class="tab-pane fade show active" id="tab-1" role="tabpanel" aria-labelledby="base-tab-1">
                    <br />
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group" style="display:none;">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group" style="display:none">
                        @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="text" value="-" name="Position" id="Position" />
                            @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">Birthday</label>
                        <div class="col-md-10">
                            <input type="date" class="form-control" name="Birth" id="Birth" value="@Model.Birth.ToString("yyyy-MM-dd")" />
                        </div>
                    </div>
                    <div class="form-group" style="display:none">
                        @Html.LabelFor(model => model.Creation_date, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Creation_date, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Creation_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Last_update, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Last_update, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Last_update, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group" style="display:none">
                        @Html.LabelFor(model => model.Last_login, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Last_login, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Last_login, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2">Phone</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Main_telephone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Main_telephone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">Agent License</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.My_License, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.My_License, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">Team leader</label>
                        <div class="col-md-10">
                          
                            <div class="checkbox" onclick="hideDropDown()">
                              
                                @Html.EditorFor(model => model.Team_Leader)
                                @Html.ValidationMessageFor(model => model.Team_Leader, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">Team leader assignation</label>
                        <div class="col-md-10">
                            <select class="form-control" name="Id_Leader" id="Id_Leader">
                                <option></option>

                                @foreach (var item in leaders)
                                {
                                    if (Model.Id_Leader == item.ID_User)
                                    {
                                        <option value="@item.ID_User" selected>@item.LastName @item.Name </option>
                                    }
                                    else
                                    {
                                        <option value="@item.ID_User">@item.LastName @item.Name </option>
                                    }

                                }
                            </select>

                        </div>
                    </div>

                    <div class="form-group" style="display:none;">
                        <label class="control-label col-md-2">Mobile</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Secundary_telephone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Secundary_telephone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group" style="display:none;">
                        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group" style="display:none">
                        @Html.LabelFor(model => model.ID_Company, "ID_Company", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("ID_Company", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ID_Company, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group" style="display:none">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @if (ViewBag.rol == "Admin")
                    {



                        <div class="form-group">
                            <label class="control-label col-md-2">Active user?</label>
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.Active)
                                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>


                    }
                    else
                    {
                        <div class="form-group" style="display:none">
                            <label class="control-label col-md-2">Active user?</label>
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.Active)
                                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    }
                    <div class="form-group" style="display:none;">
                        @Html.LabelFor(model => model.Email_active, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Email_active)
                                @Html.ValidationMessageFor(model => model.Email_active, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group" style="display:none">
                        @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group" style="display:none">
                        @Html.LabelFor(model => model.Roles, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Roles, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Roles, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="tab-2" role="tabpanel" aria-labelledby="base-tab-2">
                    <br />
                    <div class="form-group">
                        <label class="control-label col-md-2">Facebook URL<i class="la la-facebook" style="font-size:30px;"></i></label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Fb_url, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Fb_url, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">Instagram URL<i class="la la-instagram" style="font-size:30px;"></i></label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Ins_url, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Ins_url, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">Twitter URL<i class="la la-twitter" style="font-size:30px;"></i></label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Tw_url, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Tw_url, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">Other Social Network URL</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Other_url, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Other_url, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="tab-3" role="tabpanel" aria-labelledby="base-tab-3">
                    <br />

                    <div class="form-group">
                        @Html.LabelFor(model => model.Bank, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Bank, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Bank, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">Bank Number</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Bank_number, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Bank_number, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">Account Type </label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Bank_typeaccount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Bank_typeaccount, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">Credit Card Number</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Credit_number, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Credit_number, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">Credit Card Owner Name</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Credit_name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Credit_name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">Credit Card Type</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Credit_classification, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Credit_classification, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="display:none">
                        @Html.LabelFor(model => model.Credit_month, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Credit_month, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Credit_month, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="display:none">
                        @Html.LabelFor(model => model.Credit_year, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Credit_year, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Credit_year, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="tab-4" role="tabpanel" aria-labelledby="base-tab-4">

                    <br />
                    @if (ViewBag.rol == "Admin")
                    {
                        <div class="form-group">
                            <label class="control-label col-md-2">Brokerage Name</label>
                            <div class="col-md-10">
                                <input type="text" class="form-control" name="Brokerage_name" value="@activeusr.Name" readonly />
                                @Html.ValidationMessageFor(model => model.Brokerage_name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">Brokerage Address</label>
                            <div class="col-md-10">
                                <input type="text" class="form-control" name="Brokerage_address" value="@activeusr.Brokerage_address" readonly />
                                @Html.ValidationMessageFor(model => model.Brokerage_address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">Broker Contact</label>
                            <div class="col-md-10">
                                <input type="text" class="form-control" name="Broker_Contact" value="@activeusr.Broker_Contact" readonly />
                                @Html.ValidationMessageFor(model => model.Broker_Contact, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">Broker License</label>
                            <div class="col-md-10">
                                <input type="text" class="form-control" name="Broker_License" value="@activeusr.Broker_License" readonly />
                                @Html.ValidationMessageFor(model => model.Broker_License, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">Agent License</label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.My_License, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.My_License, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group" style="display:none">
                            <label class="control-label col-md-2">Member since</label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Member_since, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Member_since, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="form-group" style="display:none">
                            <label class="control-label col-md-2">Brokerage Name</label>
                            <div class="col-md-10">
                                <input type="text" class="form-control" name="Brokerage_address" value="@activeusr.Brokerage_address" readonly />
                                @Html.ValidationMessageFor(model => model.Brokerage_name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group" style="display:none">
                            <label class="control-label col-md-2">Brokerage Address</label>
                            <div class="col-md-10">
                                <input type="text" class="form-control" name="Brokerage_address" value="@activeusr.Brokerage_address" readonly />
                                @Html.ValidationMessageFor(model => model.Brokerage_address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group" style="display:none">
                            <label class="control-label col-md-2">Broker Contact</label>
                            <div class="col-md-10">
                                <input type="text" class="form-control" name="Broker_Contact" value="@activeusr.Broker_Contact" readonly />
                                @Html.ValidationMessageFor(model => model.Broker_Contact, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group" style="display:none">
                            <label class="control-label col-md-2">Broker License</label>
                            <div class="col-md-10">
                                <input type="text" class="form-control" name="Broker_License" value="@activeusr.Broker_License" readonly />
                                @Html.ValidationMessageFor(model => model.Broker_License, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group" style="display:none">
                            <label class="control-label col-md-2">My License</label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.My_License, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.My_License, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group" style="display:none">
                            <label class="control-label col-md-2">Member since</label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Member_since, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Member_since, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" id="submitB" />
                    </div>
               
                 </div>
           
                        <div class="tab-pane fade" id="tab-5" role="tabpanel" aria-labelledby="base-tab-5">
                            <br />
                            <label class="control-label col-md-2">Documents</label>
                            <table id="tableDocuments" class="table mb-0">
                                <thead>
                                    <tr>
                                        <th>Title</th>
                                        <th>Document</th>
                                        <th>Upload date</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in documents)
                                    {
                                        <tr>
                                            <td><span class="text-primary">@item.Doc_Name</span></td>
                                            <td>

                                                @if (item.Extension == ".pdf")
                                                {
                                                    <a href="@Url.Action("ShowAgentpdf", "Portal", new { id = item.Id_Document })" target="_blank">
                                                        <div class="c-icon">
                                                            <i class="la la-file-pdf-o"></i>
                                                        </div>
                                                    </a>
                                                }
                                                else
                                                {
                                                    <a href="@Url.Action("DownloadAgentDoc", "Portal", new { id = item.Id_Document })">
                                                        <div class="c-icon">

                                                            <i class="la la-file-word-o"></i>

                                                        </div>
                                                    </a>
                                                }
                                            </td>
                                            <td><span class="text-primary">@item.Upload_Date</span></td>
                                            @if (ViewBag.rol == "Admin")
                                            {

                                                <td><a href="@Url.Action("DeleteAgentDoc", "Portal", new { id = item.Id_Document })">Delete</td>
                                            }

                                        </tr>
                                    }

                                </tbody>
                            </table>
                            <div class="row">
                                <div class="col-12" style="margin:auto">
                                    <input type="file" class="form-control fileToUpload" id="file" />
                                    <button id="uploadall" class="btn btn-info">Upload file</button>
                                </div>

                            </div>
                        </div>

                        <div class="tab-pane fade" id="tab-6" role="tabpanel" aria-labelledby="base-tab-6">
                            <br/>
                            <form id="noteForm" class="media-body align-self-center text-align-center">
                                <h4>Write your note...</h4>
                                <br />
                                <textarea class="form-control-lg align-self-center" style="width: 100%" id="noteComment" cols="50" rows="5" placeholder="Write your note..."></textarea>
                                <a class="badge badgeDocstype btn" style="background-color:#f4f4f4" id="addNote">Add Note</a>
                            </form>
                            <br/>
                            <div id="accordion">
                                @foreach (var item in notes)
                                {
                                    <div class="card">
                                        <div class="card-header" id="heading_@item.ID_note">
                                            <h5 class="mb-0">
                                                <a class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapse_@item.ID_note" aria-expanded="false" aria-controls="collapse_@item.ID_note">
                                                    Note @item.Date
                                                </a>
                                            </h5>
                                        </div>
                                        <div id="collapse_@item.ID_note" class="collapse" aria-labelledby="heading_@item.ID_note" data-parent="#accordion">
                                            <div class="card-body">
                                                <textarea class="form-control-lg align-self-center" style="width: 100%" id="noteComment" cols="50" rows="5" disabled>@item.Text</textarea>
                                            </div>
                                        </div>
                                    </div>
                                }
                                
                            </div>
                        </div>
                     </div>
                    <br/>
                }


            </div>
        </div>
    </div>
</div>
<script type="text/javascript">


    function hideDropDown() {
        var checkBox = document.getElementById('Team_Leader');
        var dropLeader = document.getElementById('Id_Leader');

        if (checkBox.checked == true) {
            dropLeader.style.display = "none";
           
        }
        else {
            dropLeader.style.display = "block";
        }

        console.log(checkBox.checked);
    }
        window.onload = function () {
            $("#tableresources").DataTable();

            var checkBox = document.getElementById('Team_Leader');
            var dropLeader = document.getElementById('Id_Leader');

            if (checkBox.checked == true) {
                dropLeader.style.display = "none";
            }
            else {
                
                dropLeader.style.display = "block";
            }
            
    }
    document.getElementById('base-tab-1').onclick = function () { showButton() };
    document.getElementById('base-tab-2').onclick = function () { showButton() };
    document.getElementById('base-tab-3').onclick = function () { showButton() };
    document.getElementById('base-tab-4').onclick = function () { showButton() };
    document.getElementById('base-tab-5').onclick = function () { hideButton() };
    document.getElementById('base-tab-6').onclick = function () { hideButton() };
      
    function hideButton() {
       
        document.getElementById('submitB').style.visibility = 'hidden';
    }
    function showButton() {
        document.getElementById('submitB').style.visibility = 'visible';
    }
    //here we extract all the elements with the class specified
    var uploadfile = document.querySelectorAll(".fileToUpload");

    //here we listen for the even on every html element
    for (const file of uploadfile) {
        file.addEventListener('change', handleChange);
    }
    //variables to store the file and id arrays
    var files = [];
    var ids = [];


    //we capture the data we need from the html attribute
    function handleChange(e) {
        var id = $(this).attr("id");
        var idtosave = id.substring(5);
        console.log(files.length);
        if (files.length > 0) {
            files.pop(files[0]);
            files.push(e.target.files[0]);
            ids.pop(ids[0]);
            ids.push(idtosave);
        }
        else {
            files.push(e.target.files[0]);
            ids.push(idtosave);

        }


    }


    uploadall.onclick = function () {

        var formData = new FormData();

        $.each(files, (i, file) => {
            formData.append("imageUploadForm", file);
        });

        $.each(ids, (i, id) => {
            formData.append("ids", id);
            formData.append("idagent", @Model.ID_User)
        });


        $.ajax({
            type: "POST",
            url: '/Portal/Uploadagentfile',
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (response) {
                console.log(response);
                if (response == "SUCCESS") {

                    new Noty({
                        type: 'success',
                        layout: 'topRight',
                        text: 'File uploaded successfully',
                        progressBar: true,
                        timeout: 3000
                    }).show();
                    setTimeout(function () {
                        window.location.reload(true);

                    }, 1000);
                 
                     console.log(response);
                } else {
                    $("#loader_form").hide();

                    alert(response);
                }
            },
            error: function (error) {
                $("#loader_form").hide();

                alert("Error uploading file");
            }
        });
    }

    document.getElementById('addNote').onclick = function () {
        

            var formData = new FormData();

        var content = $("#noteComment").val();
        var agent = '@Model.ID_User';

            formData.append("content", content);
            formData.append("agent", agent);
            


            $.ajax({
                type: "POST",
                url: '/Notes/AddAgentnote',
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (response) {
                    if (response == "SUCCESS") {
                        $("#loader_form").hide();
                        $("#subbtnenviar").attr("disabled", false);


                        window.location.reload(true);
                        

                    } else {
                        $("#loader_form").hide();
                        $("#subbtnenviar").attr("disabled", false);
                        alert(response);
                    }
                },
                error: function (error) {
                    $("#loader_form").hide();
                    $("#subbtnenviar").attr("disabled", false);
                    alert("Error uploading video");
                }
            });
        






    }
</script>
